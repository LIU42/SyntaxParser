{
  "formulas": [
    "[PreProgram] -> [Program]",
    "[Program] -> [TranslationUnit]",
    "[TranslationUnit] -> [ExternalDeclaration]",
    "[TranslationUnit] -> [TranslationUnit] [ExternalDeclaration]",
    "[ExternalDeclaration] -> [FunctionDefinition]",
    "[ExternalDeclaration] -> [Declaration]",
    "[FunctionDefinition] -> [DeclarationSpecifiers] [Declarator] [DeclarationList] [CompoundStatement]",
    "[FunctionDefinition] -> [DeclarationSpecifiers] [Declarator] [CompoundStatement]",
    "[DeclarationList] -> [Declaration]",
    "[DeclarationList] -> [DeclarationList] [Declaration]",
    "[Statement] -> [LabeledStatement]",
    "[Statement] -> [CompoundStatement]",
    "[Statement] -> [ExpressionStatement]",
    "[Statement] -> [SelectionStatement]",
    "[Statement] -> [LoopStatement]",
    "[Statement] -> [JumpStatement]",
    "[LabeledStatement] -> <identifiers,> <operators,:> [Statement]",
    "[LabeledStatement] -> <keywords,case> [ConstantExpression] <operators,:> [Statement]",
    "[LabeledStatement] -> <keywords,default> <operators,:> [Statement]",
    "[CompoundStatement] -> <bounds,{> [BlockItemList] <bounds,}>",
    "[CompoundStatement] -> <bounds,{> <bounds,}>",
    "[BlockItemList] -> [BlockItem]",
    "[BlockItemList] -> [BlockItemList] [BlockItem]",
    "[BlockItem] -> [Declaration]",
    "[BlockItem] -> [Statement]",
    "[ExpressionStatement] -> [Expression] <bounds,;>",
    "[ExpressionStatement] -> <bounds,;>",
    "[SelectionStatement] -> <keywords,if> <bounds,(> [Expression] <bounds,)> [Statement]",
    "[SelectionStatement] -> <keywords,if> <bounds,(> [Expression] <bounds,)> [Statement] <keywords,else> [Statement]",
    "[SelectionStatement] -> <keywords,switch> <bounds,(> [Expression] <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,while> <bounds,(> [Expression] <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,do> [Statement] <keywords,while> <bounds,(> [Expression] <bounds,)> <bounds,;>",
    "[LoopStatement] -> <keywords,for> <bounds,(> [Expression] <bounds,;> [Expression] <bounds,;> [Expression] <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> <bounds,;> [Expression] <bounds,;> [Expression] <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> [Expression] <bounds,;> <bounds,;> [Expression] <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> [Expression] <bounds,;> [Expression] <bounds,;> <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> <bounds,;> <bounds,;> [Expression] <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> <bounds,;> [Expression] <bounds,;> <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> [Expression] <bounds,;> <bounds,;> <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> <bounds,;> <bounds,;> <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> [Declaration] [Expression] <bounds,;> [Expression] <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> [Declaration] <bounds,;> [Expression] <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> [Declaration] [Expression] <bounds,;> <bounds,)> [Statement]",
    "[LoopStatement] -> <keywords,for> <bounds,(> [Declaration] <bounds,;> <bounds,)> [Statement]",
    "[JumpStatement] -> <keywords,goto> <identifiers,> <bounds,;>",
    "[JumpStatement] -> <keywords,continue> <bounds,;>",
    "[JumpStatement] -> <keywords,break> <bounds,;>",
    "[JumpStatement] -> <keywords,return> [Expression] <bounds,;>",
    "[JumpStatement] -> <keywords,return> <bounds,;>",
    "[Declaration] -> [DeclarationSpecifiers] <bounds,;>",
    "[Declaration] -> [DeclarationSpecifiers] [InitDeclaratorList] <bounds,;>",
    "[DeclarationSpecifiers] -> [StorageClassSpecifiers]",
    "[DeclarationSpecifiers] -> [StorageClassSpecifiers] [DeclarationSpecifiers]",
    "[DeclarationSpecifiers] -> [TypeSpecifiers]",
    "[DeclarationSpecifiers] -> [TypeSpecifiers] [DeclarationSpecifiers]",
    "[DeclarationSpecifiers] -> [TypeQualifiers]",
    "[DeclarationSpecifiers] -> [TypeQualifiers] [DeclarationSpecifiers]",
    "[DeclarationSpecifiers] -> [FunctionSpecifiers]",
    "[DeclarationSpecifiers] -> [FunctionSpecifiers] [DeclarationSpecifiers]",
    "[InitDeclaratorList] -> [InitDeclarator]",
    "[InitDeclaratorList] -> [InitDeclaratorList] <operators,,> [InitDeclarator]",
    "[InitDeclarator] -> [Declarator]",
    "[InitDeclarator] -> [Declarator] <operators,=> [Initializer]",
    "[StorageClassSpecifiers] -> <keywords,typedef>",
    "[StorageClassSpecifiers] -> <keywords,extern>",
    "[StorageClassSpecifiers] -> <keywords,static>",
    "[StorageClassSpecifiers] -> <keywords,auto>",
    "[StorageClassSpecifiers] -> <keywords,register>",
    "[TypeSpecifiers] -> <keywords,void>",
    "[TypeSpecifiers] -> <keywords,char>",
    "[TypeSpecifiers] -> <keywords,bool>",
    "[TypeSpecifiers] -> <keywords,short>",
    "[TypeSpecifiers] -> <keywords,int>",
    "[TypeSpecifiers] -> <keywords,long>",
    "[TypeSpecifiers] -> <keywords,float>",
    "[TypeSpecifiers] -> <keywords,double>",
    "[TypeSpecifiers] -> <keywords,signed>",
    "[TypeSpecifiers] -> <keywords,unsigned>",
    "[TypeSpecifiers] -> <keywords,complex>",
    "[TypeSpecifiers] -> [StructOrUnionSpecifiers]",
    "[TypeSpecifiers] -> [EnumSpecifiers]",
    "[StructOrUnionSpecifiers] -> [StructOrUnion] <bounds,{> [StructDeclarationList] <bounds,}>",
    "[StructOrUnionSpecifiers] -> [StructOrUnion] <identifiers,> <bounds,{> [StructDeclarationList] <bounds,}>",
    "[StructOrUnionSpecifiers] -> [StructOrUnion] <identifiers,>",
    "[StructOrUnion] -> <keywords,struct>",
    "[StructOrUnion] -> <keywords,union>",
    "[StructDeclarationList] -> [StructDeclaration]",
    "[StructDeclarationList] -> [StructDeclarationList] [StructDeclaration]",
    "[StructDeclaration] -> [SpecifierQualifierList] [StructDeclaratorList] <bounds,;>",
    "[SpecifierQualifierList] -> [TypeSpecifiers]",
    "[SpecifierQualifierList] -> [TypeSpecifiers] [SpecifierQualifierList]",
    "[SpecifierQualifierList] -> [TypeQualifiers]",
    "[SpecifierQualifierList] -> [TypeQualifiers] [SpecifierQualifierList]",
    "[StructDeclaratorList] -> [StructDeclarator]",
    "[StructDeclaratorList] -> [StructDeclaratorList] <operators,,> [StructDeclarator]",
    "[StructDeclarator] -> [Declarator]",
    "[StructDeclarator] -> [Declarator] <operators,:> [ConstantExpression]",
    "[StructDeclarator] -> <operators,:> [ConstantExpression]",
    "[EnumSpecifiers] -> <keywords,enum> <identifiers,> <bounds,{> [EnumeratorList] <bounds,}>",
    "[EnumSpecifiers] -> <keywords,enum> <bounds,{> [EnumeratorList] <bounds,}>",
    "[EnumSpecifiers] -> <keywords,enum> <identifiers,> <bounds,{> [EnumeratorList] <operators,,> <bounds,}>",
    "[EnumSpecifiers] -> <keywords,enum> <bounds,{> [EnumeratorList] <operators,,> <bounds,}>",
    "[EnumSpecifiers] -> <keywords,enum> <identifiers,>",
    "[EnumeratorList] -> [Enumerator]",
    "[EnumeratorList] -> [EnumeratorList] <operators,,> [Enumerator]",
    "[Enumerator] -> [EnumerationConstant]",
    "[Enumerator] -> [EnumerationConstant] <operators,=> [ConstantExpression]",
    "[EnumerationConstant] -> <identifiers,>",
    "[TypeQualifiers] -> <keywords,const>",
    "[TypeQualifiers] -> <keywords,restrict>",
    "[TypeQualifiers] -> <keywords,volatile>",
    "[FunctionSpecifiers] -> <keywords,inline>",
    "[Declarator] -> [DirectDeclarator]",
    "[Declarator] -> [Pointer] [DirectDeclarator]",
    "[DirectDeclarator] -> <identifiers,>",
    "[DirectDeclarator] -> <bounds,(> [Declarator] <bounds,)>",
    "[DirectDeclarator] -> [DirectDeclarator] <bounds,[> [AssignExpression] <bounds,]>",
    "[DirectDeclarator] -> [DirectDeclarator] <bounds,[> <bounds,]>",
    "[DirectDeclarator] -> [DirectDeclarator] <bounds,(> [ParamList] <bounds,)>",
    "[DirectDeclarator] -> [DirectDeclarator] <bounds,(> <bounds,)>",
    "[Pointer] -> <operators,*> [TypeQualifierList]",
    "[Pointer] -> <operators,*>",
    "[Pointer] -> <operators,*> [TypeQualifierList] [Pointer]",
    "[Pointer] -> <operators,*> [Pointer]",
    "[TypeQualifierList] -> [TypeQualifiers]",
    "[TypeQualifierList] -> [TypeQualifierList] [TypeQualifiers]",
    "[ParamList] -> [ParamDeclaration]",
    "[ParamList] -> [ParamList] <operators,,> [ParamDeclaration]",
    "[ParamDeclaration] -> [DeclarationSpecifiers] [Declarator]",
    "[ParamDeclaration] -> [DeclarationSpecifiers]",
    "[TypeName] -> [SpecifierQualifierList] [Pointer]",
    "[TypeName] -> [SpecifierQualifierList]",
    "[Initializer] -> [AssignExpression]",
    "[Initializer] -> <bounds,{> [InitializerList] <bounds,}>",
    "[Initializer] -> <bounds,{> [InitializerList] <operators,,> <bounds,}>",
    "[InitializerList] -> [Designation] [Initializer]",
    "[InitializerList] -> [Initializer]",
    "[InitializerList] -> [InitializerList] <operators,,> [Designation] [Initializer]",
    "[InitializerList] -> [InitializerList] <operators,,> [Initializer]",
    "[Designation] -> [DesignatorList] <operators,=>",
    "[DesignatorList] -> [Designator]",
    "[DesignatorList] -> [DesignatorList] [Designator]",
    "[Designator] -> <bounds,[> [ConstantExpression] <bounds,]>",
    "[Designator] -> <operators,.> <identifiers,>",
    "[PrimaryExpression] -> <identifiers,>",
    "[PrimaryExpression] -> <constants,>",
    "[PrimaryExpression] -> <bounds,(> [Expression] <bounds,)>",
    "[PostfixExpression] -> [PrimaryExpression]",
    "[PostfixExpression] -> [PostfixExpression] <bounds,[> [Expression] <bounds,]>",
    "[PostfixExpression] -> [PostfixExpression] <bounds,(> [ArgumentExpressionList] <bounds,)>",
    "[PostfixExpression] -> [PostfixExpression] <bounds,(> <bounds,)>",
    "[PostfixExpression] -> [PostfixExpression] <operators,.> <identifiers,>",
    "[PostfixExpression] -> [PostfixExpression] <operators,->> <identifiers,>",
    "[PostfixExpression] -> [PostfixExpression] <operators,++>",
    "[PostfixExpression] -> [PostfixExpression] <operators,-->",
    "[PostfixExpression] -> <bounds,(> [TypeName] <bounds,)> <bounds,{> [InitializerList] <bounds,}>",
    "[PostfixExpression] -> <bounds,(> [TypeName] <bounds,)> <bounds,{> [InitializerList] <operators,,> <bounds,}>",
    "[ArgumentExpressionList] -> [AssignExpression]",
    "[ArgumentExpressionList] -> [ArgumentExpressionList] <operators,,> [AssignExpression]",
    "[UnaryExpression] -> [PostfixExpression]",
    "[UnaryExpression] -> <operators,++> [UnaryExpression]",
    "[UnaryExpression] -> <operators,--> [UnaryExpression]",
    "[UnaryExpression] -> [UnaryOperator] [CastExpression]",
    "[UnaryExpression] -> <keywords,sizeof> [UnaryExpression]",
    "[UnaryExpression] -> <keywords,sizeof> <bounds,(> [TypeName] <bounds,)>",
    "[UnaryOperator] -> <operators,&>",
    "[UnaryOperator] -> <operators,*>",
    "[UnaryOperator] -> <operators,+>",
    "[UnaryOperator] -> <operators,->",
    "[UnaryOperator] -> <operators,~>",
    "[UnaryOperator] -> <operators,!>",
    "[CastExpression] -> [UnaryExpression]",
    "[CastExpression] -> <bounds,(> [TypeName] <bounds,)> [CastExpression]",
    "[MulExpression] -> [CastExpression]",
    "[MulExpression] -> [MulExpression] <operators,*> [CastExpression]",
    "[MulExpression] -> [MulExpression] <operators,/> [CastExpression]",
    "[MulExpression] -> [MulExpression] <operators,%> [CastExpression]",
    "[AddExpression] -> [MulExpression]",
    "[AddExpression] -> [AddExpression] <operators,+> [MulExpression]",
    "[AddExpression] -> [AddExpression] <operators,-> [MulExpression]",
    "[ShiftExpression] -> [AddExpression]",
    "[ShiftExpression] -> [ShiftExpression] <operators,<<> [AddExpression]",
    "[ShiftExpression] -> [ShiftExpression] <operators,>>> [AddExpression]",
    "[RelationExpression] -> [ShiftExpression]",
    "[RelationExpression] -> [RelationExpression] <operators,<> [ShiftExpression]",
    "[RelationExpression] -> [RelationExpression] <operators,>> [ShiftExpression]",
    "[RelationExpression] -> [RelationExpression] <operators,<=> [ShiftExpression]",
    "[RelationExpression] -> [RelationExpression] <operators,>=> [ShiftExpression]",
    "[EqualExpression] -> [RelationExpression]",
    "[EqualExpression] -> [EqualExpression] <operators,==> [RelationExpression]",
    "[EqualExpression] -> [EqualExpression] <operators,!=> [RelationExpression]",
    "[BitAndExpression] -> [EqualExpression]",
    "[BitAndExpression] -> [BitAndExpression] <operators,&> [EqualExpression]",
    "[BitXorExpression] -> [BitAndExpression]",
    "[BitXorExpression] -> [BitXorExpression] <operators,^> [BitAndExpression]",
    "[BitOrExpression] -> [BitXorExpression]",
    "[BitOrExpression] -> [BitOrExpression] <operators,|> [BitXorExpression]",
    "[LogicalAndExpression] -> [BitOrExpression]",
    "[LogicalAndExpression] -> [LogicalAndExpression] <operators,&&> [BitOrExpression]",
    "[LogicalOrExpression] -> [LogicalAndExpression]",
    "[LogicalOrExpression] -> [LogicalOrExpression] <operators,||> [LogicalAndExpression]",
    "[ConditionExpression] -> [LogicalOrExpression]",
    "[ConditionExpression] -> [LogicalOrExpression] <operators,?> [Expression] <operators,:> [ConditionExpression]",
    "[AssignExpression] -> [ConditionExpression]",
    "[AssignExpression] -> [UnaryExpression] [AssignOperator] [AssignExpression]",
    "[AssignOperator] -> <operators,=>",
    "[AssignOperator] -> <operators,*=>",
    "[AssignOperator] -> <operators,/=>",
    "[AssignOperator] -> <operators,%=>",
    "[AssignOperator] -> <operators,+=>",
    "[AssignOperator] -> <operators,-=>",
    "[AssignOperator] -> <operators,<<=>",
    "[AssignOperator] -> <operators,>>=>",
    "[AssignOperator] -> <operators,&=>",
    "[AssignOperator] -> <operators,^=>",
    "[AssignOperator] -> <operators,|=>",
    "[Expression] -> [AssignExpression]",
    "[Expression] -> [Expression] <operators,,> [AssignExpression]",
    "[ConstantExpression] -> [ConditionExpression]"
  ]
}